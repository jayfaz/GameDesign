using UnityEngine;
using System.Collections;

public class Playermovement : MonoBehaviour
{
    private float movementSpeed = 5.0f;
    private bool isGrounded = true;


    void Update() 
	{	
        GetComponent<Rigidbody>().velocity = new Vector3(0, GetComponent<Rigidbody>().velocity.y, 0); //Set X and Z velocity to 0

        //Vector3 movement = (Input.GetAxis("Horizontal") * -Vector3.left * movementSpeed) + (Input.GetAxis("Vertical") * Vector3.forward * movementSpeed);
        //movement *= Time.deltaTime;
        float moveInputX = (Input.GetAxis("Horizontal") * Time.deltaTime * movementSpeed);
        float moveInputZ = (Input.GetAxis("Vertical") * Time.deltaTime * movementSpeed);
        transform.position += new Vector3(moveInputX, 0, moveInputZ);
  
        if (Input.GetButtonDown("Jump") && isGrounded)
        {
            //Jump(); //Manual jumping
			GetComponent<Rigidbody>().velocity = new Vector3(0, 0, 0);
			GetComponent<Rigidbody>().AddForce(new Vector3(0, 400, 0), ForceMode.Force); 
			isGrounded = false;
            movementSpeed = 10;
        }

        while (Input.GetKeyDown(""))
        {
            movementSpeed = 20;
        }
        movementSpeed = 15;
	}

    void Jump()
    {
        if (!isGrounded) {return;}
        isGrounded = false;
		GetComponent<Rigidbody>().velocity = new Vector3(0, 0, 0);
		GetComponent<Rigidbody>().AddForce(new Vector3(0, 700, 0), ForceMode.Force); 
    }

	void OnCollisionEnter(Collision other)
	{
        if (other.gameObject.tag == "platform")
        {
            isGrounded = true;
            movementSpeed = 15;
        }            
	}

    /*void FixedUpdate()
    {
        isGrounded = Physics.Raycast(transform.position, - Vector3.up, 1.0f);

        if (isGrounded)
        {
            Jump(); //Automatic jumping
        }
    }*/
       

}
